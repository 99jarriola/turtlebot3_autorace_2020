<launch>
  <!-- launch turtlebot3_autorace_camera_calibration.launch in the raspberry pi before launch this file -->

  <arg name="mode" default="action" doc="mode type [calibration, action]"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>

  <group ns= "$(arg first_tb3)">
    <!-- image brightness & contrast compensation of ground-projected image -->
    <node pkg="turtlebot3_autorace_camera" type="image_compensation" name="image_compensation" output="screen">
      <rosparam command="load" file="$(find turtlebot3_autorace_camera)/calibration/extrinsic_calibration/compensation.yaml" />
      <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
      <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>
      <remap from="/camera/image_input" to="/$(arg first_tb3)/camera/image_rect_color" />
      <remap from="/camera/image_input/compressed" to="/$(arg first_tb3)/camera/image_rect_color/compressed" />
      <remap from="/camera/image_output" to="/$(arg first_tb3)/camera/image_compensated" />
      <remap from="/camera/image_output/compressed" to="/$(arg first_tb3)/camera/image_compensated/compressed" />
    </node>

    <!-- image ground projection -->
    <node pkg="turtlebot3_autorace_camera" type="image_projection" name="image_projection" output="screen">
      <rosparam command="load" file="$(find turtlebot3_autorace_camera)/calibration/extrinsic_calibration/projection.yaml" />
      <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
      <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>    
      <remap from="/camera/image_input" to="/$(arg first_tb3)/camera/image_rect_color" />
      <remap from="/camera/image_input/compressed" to="/$(arg first_tb3)/camera/image_rect_color/compressed" />
      <remap from="/camera/image_output" to="/$(arg first_tb3)/camera/image_projected" />
      <remap from="/camera/image_output/compressed" to="/$(arg first_tb3)/camera/image_projected/compressed" />
      <remap from="/camera/image_calib" to="/$(arg first_tb3)/camera/image_extrinsic_calib" />
      <remap from="/camera/image_calib/compressed" to="/$(arg first_tb3)/camera/image_extrinsic_calib/compressed" />
    </node>

    <!-- image brightness & contrast compensation of ground-projected image -->
    <node pkg="turtlebot3_autorace_camera" type="image_compensation" name="image_compensation_projection" output="screen">
      <rosparam command="load" file="$(find turtlebot3_autorace_camera)/calibration/extrinsic_calibration/compensation.yaml" />
      <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
      <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>    
      <remap from="/camera/image_input" to="/$(arg first_tb3)/camera/image_projected" />
      <remap from="/camera/image_input/compressed" to="/$(arg first_tb3)/camera/image_projected/compressed" />
      <remap from="/camera/image_output" to="/$(arg first_tb3)/camera/image_projected_compensated" />
      <remap from="/camera/image_output/compressed" to="/$(arg first_tb3)/camera/image_projected_compensated/compressed" />
    </node>
  </group>


  <group ns = "$(arg second_tb3)">
  	<!-- image brightness & contrast compensation of ground-projected image -->
    <node pkg="turtlebot3_autorace_camera" type="image_compensation" name="image_compensation" output="screen">
      <rosparam command="load" file="$(find turtlebot3_autorace_camera)/calibration/extrinsic_calibration/compensation.yaml" />
      <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
      <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>
      <remap from="/camera/image_input" to="/$(arg second_tb3)/camera/image_rect_color" />
      <remap from="/camera/image_input/compressed" to="/$(arg second_tb3)/camera/image_rect_color/compressed" />
      <remap from="/camera/image_output" to="/$(arg second_tb3)/camera/image_compensated" />
      <remap from="/camera/image_output/compressed" to="/$(arg second_tb3)/camera/image_compensated/compressed" />
    </node>

    <!-- image ground projection -->
    <node pkg="turtlebot3_autorace_camera" type="image_projection" name="image_projection" output="screen">
      <rosparam command="load" file="$(find turtlebot3_autorace_camera)/calibration/extrinsic_calibration/projection.yaml" />
      <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
      <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>    
      <remap from="/camera/image_input" to="/$(arg second_tb3)/camera/image_rect_color" />
      <remap from="/camera/image_input/compressed" to="/$(arg second_tb3)/camera/image_rect_color/compressed" />
      <remap from="/camera/image_output" to="/$(arg second_tb3)/camera/image_projected" />
      <remap from="/camera/image_output/compressed" to="/$(arg second_tb3)/camera/image_projected/compressed" />
      <remap from="/camera/image_calib" to="/$(arg second_tb3)/camera/image_extrinsic_calib" />
      <remap from="/camera/image_calib/compressed" to="/$(arg second_tb3)/camera/image_extrinsic_calib/compressed" />
    </node>

    <!-- image brightness & contrast compensation of ground-projected image -->
    <node pkg="turtlebot3_autorace_camera" type="image_compensation" name="image_compensation_projection" output="screen">
      <rosparam command="load" file="$(find turtlebot3_autorace_camera)/calibration/extrinsic_calibration/compensation.yaml" />
      <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
      <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>    
      <remap from="/camera/image_input" to="/$(arg second_tb3)/camera/image_projected" />
      <remap from="/camera/image_input/compressed" to="/$(arg second_tb3)/camera/image_projected/compressed" />
      <remap from="/camera/image_output" to="/$(arg second_tb3)/camera/image_projected_compensated" />
      <remap from="/camera/image_output/compressed" to="/$(arg second_tb3)/camera/image_projected_compensated/compressed" />
    </node>
  </group>
</launch>
